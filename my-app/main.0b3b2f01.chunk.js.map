{"version":3,"sources":["header.js","listItem.js","list.js","post.js","pages.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","ListItem","title","body","shortenBody","handleClicked","id","substring","List","useState","posts","setPosts","useEffect","axios","get","then","response","data","console","log","e","target","closest","getAttribute","onClick","map","i","data-id","key","Post","useParams","setTitle","setbody","author","setAuthor","postUrl","About","src","alt","Home","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b3b2f01.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\nimport { Link } from 'react-router-dom';\n\nfunction Header(){\n\treturn(\n\t<header>\n\t\t<nav>\n\t\t\t<div className=\"title\">戲劇系館十二點關門</div>\n\t\t\t<div className=\"nav-items\">\n\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t<Link to=\"/list\">List</Link>\n\t\t\t\t<Link to=\"/about\">About</Link>\n\t\t\t</div>\n\t\t</nav>\n\t</header>\n\t)\n}\n\n\nexport default Header;","import React from 'react';\nimport './listItem.css';\n\nfunction ListItem({title,body,handleClicked,id}){\n\tlet shortenBody = body.substring(0,15);\n\t// const hendleChick = (e) =>{\n\t// \thandleClicked(e.target);\n\t// }\n\treturn(\n\t<div >\n\t\t<div className='list-item-title'>{title}</div>\n\t\t<div className='list-item-body'>「{shortenBody}」</div>\n\t\t<div className=\"list-item-more\">Read More</div>\n\t\t</div>)\n}\n\nexport default ListItem","import React,{useEffect,useState}  from 'react';\nimport ListItem from './listItem'\nimport './list.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\nfunction List(){\n\n\tconst [posts,setPosts] = useState([]);\n\tconst url = `https://qootest.com/posts`;\n\t\n  useEffect(()=>{\n    axios.get(url)\n    .then(response=>{\n\t\t\tconst {data} = response;\n\t\t\tsetPosts(data);\n    })\n\t},[])\n\tconsole.log(posts);\n\n\tconst handleClicked = (e) =>{\n\t\tconsole.log(e.target.closest('.list-item').getAttribute('data-id'));\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t<h2>All the stories</h2>\n\t\t\t<div className=\"list-wrapper\">\n\t\t\t\t<div className='list' onClick={handleClicked}>\n\t\t\t\t\t{posts.map(({title,body,id},i) =>{\n\t\t\t\t\t\treturn (<Link to={`/posts/${id}`} className=\"list-item\" data-id={id}><ListItem title={title} body={body} key={i} id={id} handleClicked={handleClicked}/></Link>)\t\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\n\nexport default List;\n","import {useParams} from \"react-router\";\nimport React, {useEffect,useState} from 'react';\nimport axios from 'axios';\nimport './post.css';\n\n\nexport default function Post(){\n\tlet {id} = useParams();\n  const\t[title,setTitle] = useState('');\n\tconst [body,setbody] = useState('');\n\tconst [author,setAuthor] = useState('');\n\n\n  const postUrl = `https://qootest.com/posts/${id}`\n\n\tuseEffect(()=>{\n    axios.get(postUrl)\n    .then(response => {\n\t\t\tconsole.log(response);\n\t\t\tsetTitle(response.data.title);\n\t\t\tsetbody(response.data.body);\n\t\t\tsetAuthor(response.data.author);\n    })\n\t},[])\n\n\n\treturn(\n\t\t<div className=\"post-wrapper\">\n\t\t\t<div className=\"post_title\">{title} </div>\n\t\t\t<div className=\"post_author\">{author}</div>\n\t\t\t<div className=\"post_body\">{body} </div>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport './pages.css';\n\nfunction About(){\n\treturn (\n\t\t<>\n\t\t<div className=\"about-wrapper\">\n\t\t\t<div className=\"about_title\">About</div>\n\t\t\t<img src=\"https://picsum.photos/id/237/700/500\" alt=\"I am a doggy\"></img>\n\t\t\t<div className=\"page-holder\">This page is still building, but you can watch me first.</div>\n\t\t</div>\n\t\t</>\n\t)\n}\n\n\nfunction Home(){\n\treturn (\n\t\t<>\n\t\t<div className=\"home-wrapper\">\n\t\t\t<div className=\"home_title\">Home</div>\n\t\t\t<div className=\"page-holder\">This page is still building, but you can watch me first.</div>\n\t\t\t<img src=\"https://picsum.photos/id/1025/700/500\" alt=\"I am a doggy\"></img>\n\t\t\t\n\t\t</div>\t\t\n\t\t</>\n\t)\n}\n\nexport {About, Home}","import React from 'react';\nimport { BrowserRouter as  Router, Route } from 'react-router-dom';\nimport Header from './header';\nimport List from './list';\nimport Post from './post';\nimport  {About, Home } from './pages';\nimport './App.css';\n\nfunction App() {\n  \n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <Route path=\"/\" exact component={Home} />\n        <Route path=\"/list\" component={List} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/posts/:id\" component={Post} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Switch } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter>\n\t<Switch>\n\t\t<App />\n\t</Switch>\n</BrowserRouter>,\ndocument.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}